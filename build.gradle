/*
 * SPDX-License-Identifier: AGPL-3.0-or-later
 *
 * Copyright © 2023–2024 Jaxydog
 *
 * This file is part of Astral.
 *
 * Astral is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * Astral is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with Astral. If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base { archivesName = project.archives_base_name }

repositories {
    maven { url = 'https://maven.ladysnake.org/releases' }
    maven {
        url = 'https://maven.cafeteria.dev'
        content { includeGroup 'net.adriantodt.fabricmc' }
    }
    maven {
        url 'https://maven.jamieswhiteshirt.com/libs-release'
        content { includeGroup 'com.jamieswhiteshirt' }
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/' }
    exclusiveContent {
        forRepository {
            maven { url 'https://api.modrinth.com/maven' }
        }
        filter { includeGroup 'maven.modrinth' }
    }
}

loom {
    accessWidenerPath = file('src/main/resources/astral.accesswidener')
    runs {
        datagen {
            inherit server
            name 'Data Generation'
            vmArg '-Dfabric-api.datagen'
            vmArg "-Dfabric-api.datagen.output-dir=${file('src/main/generated')}"
            vmArg '-Dfabric-api.datagen.modid=astral'

            runDir 'build/datagen'
        }
    }
}

sourceSets {
    main {
        resources { srcDirs += [ 'src/main/generated' ] }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.github.apace100:origins-fabric:v${project.origins_version}"
    modImplementation "com.github.apace100:apoli:v${project.apoli_version}"
    modImplementation "com.github.apace100:calio:v${project.calio_version}"
    modImplementation "dev.emi:trinkets:${project.trinkets_version}"
    modApi(
        "com.github.Virtuoel:Pehkui:${project.pehkui_version}",
        { exclude group: 'net.fabricmc.fabric-api' }
    )
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') { expand 'version': project.version }
}

tasks.withType(JavaCompile).configureEach { it.options.release = 17 }
tasks.withType(Copy).configureEach { duplicatesStrategy = DuplicatesStrategy.INCLUDE }
tasks.withType(Jar).configureEach { duplicatesStrategy = DuplicatesStrategy.INCLUDE }

java {
    withJavadocJar()
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") { rename { "${it}_${archives_base_name}" } }

    exclude '.cache', 'dev/jaxydog/astral/datagen', 'dev/jaxydog/astral/AstralDataGenerator'
    exclude 'assets/astral/*/*.unmerged.json', 'data/astral/*/*.unmerged.json'
}

publishing {
    publications {
        mavenJava(MavenPublication) { from components.java }
    }

    repositories {}
}
